"use strict";(globalThis.webpackChunkcomputer_architecture=globalThis.webpackChunkcomputer_architecture||[]).push([[2665],{1128:(e,a,l)=>{l.r(a),l.d(a,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var n=l(8168),t=(l(6540),l(5680));const r={},i="\ud83c\udf1f Template IcarusVerilog",o={unversionedId:"Tutoriale/Simulare GTKWave/README",id:"Tutoriale/Simulare GTKWave/README",title:"\ud83c\udf1f Template IcarusVerilog",description:"Acesta este un template gata de folosit, care include Makefile-ul \u0219i set\u0103rile / task-urile necesare pentru a putea rula cod Verilog pe orice calculator care folose\u0219te Windows.",source:"@site/docs/Tutoriale/Simulare GTKWave/README.md",sourceDirName:"Tutoriale/Simulare GTKWave",slug:"/Tutoriale/Simulare GTKWave/",permalink:"/computer-architecture/Tutoriale/Simulare GTKWave/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Simulare modul \xeen Vivado",permalink:"/computer-architecture/Tutoriale/Simulare Vivado/"},next:{title:"Programarea FPGA-ului \xeen Vivado",permalink:"/computer-architecture/Tutoriale/Programare FPGA Vivado/"}},u={},p=[{value:"Pa\u0219ii de instalare",id:"pa\u0219ii-de-instalare",level:2},{value:"Cerin\u021be",id:"cerin\u021be",level:3},{value:"1. Instaleaz\u0103 MSYS2",id:"1-instaleaz\u0103-msys2",level:2},{value:"1.1. Descarc\u0103 \u0219i instaleaz\u0103",id:"11-descarc\u0103-\u0219i-instaleaz\u0103",level:3},{value:"1.2. Deschide terminalul corect",id:"12-deschide-terminalul-corect",level:3},{value:"1.3. Actualizeaz\u0103 pachetele",id:"13-actualizeaz\u0103-pachetele",level:3},{value:"1.4. Instaleaz\u0103 uneltele necesare",id:"14-instaleaz\u0103-uneltele-necesare",level:3},{value:"1.5. Verific\u0103 instalarea",id:"15-verific\u0103-instalarea",level:3},{value:"2. Instaleaz\u0103 VS Code + extensii",id:"2-instaleaz\u0103-vs-code--extensii",level:2},{value:"2.1. Instaleaza Visual Studio Code",id:"21-instaleaza-visual-studio-code",level:3},{value:"2.2. Extensii recomandate",id:"22-extensii-recomandate",level:3},{value:"Instalare prin CLI (daca <code>code</code> este \xeen PATH):",id:"instalare-prin-cli-daca-code-este-\xeen-path",level:4},{value:"3. Cloneaz\u0103 repository-ul \u201estarter\u201d",id:"3-cloneaz\u0103-repository-ul-starter",level:2},{value:"Varianta PowerShell / CMD:",id:"varianta-powershell--cmd",level:3},{value:"Varianta MSYS2 (op\u021bional):",id:"varianta-msys2-op\u021bional",level:3},{value:"4. Ce con\u021bine repository-ul",id:"4-ce-con\u021bine-repository-ul",level:2},{value:"5. Ruleaz\u0103 primul exemplu",id:"5-ruleaz\u0103-primul-exemplu",level:2},{value:"6. Reguli standard pentru testbench",id:"6-reguli-standard-pentru-testbench",level:2},{value:"7. Rulare manual\u0103 din MSYS2 (op\u021bional)",id:"7-rulare-manual\u0103-din-msys2-op\u021bional",level:2},{value:"8. Probleme frecvente",id:"8-probleme-frecvente",level:2},{value:"9. Acum e\u0219ti preg\u0103tit \xee\u021bi simulezi propriile proiecte \ud83d\ude80",id:"9-acum-e\u0219ti-preg\u0103tit-\xee\u021bi-simulezi-propriile-proiecte-",level:2},{value:"Concluzie",id:"concluzie",level:2}],s={toc:p},g="wrapper";function c({components:e,...a}){return(0,t.yg)(g,(0,n.A)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"-template-icarusverilog"},"\ud83c\udf1f Template IcarusVerilog"),(0,t.yg)("p",null,"Acesta este un ",(0,t.yg)("strong",{parentName:"p"},"template gata de folosit"),", care include ",(0,t.yg)("strong",{parentName:"p"},"Makefile-ul")," \u0219i set\u0103rile / task-urile necesare pentru a putea rula cod ",(0,t.yg)("strong",{parentName:"p"},"Verilog")," pe orice calculator care folose\u0219te ",(0,t.yg)("strong",{parentName:"p"},"Windows"),"."),(0,t.yg)("blockquote",null,(0,t.yg)("p",{parentName:"blockquote"},(0,t.yg)("a",{parentName:"p",href:"https://github.com/arhitectura-calculatoarelor-resources/IcarusVerilog_Template.git"},"https://github.com/arhitectura-calculatoarelor-resources/IcarusVerilog_Template.git"))),(0,t.yg)("h2",{id:"pa\u0219ii-de-instalare"},"Pa\u0219ii de instalare"),(0,t.yg)("h3",{id:"cerin\u021be"},"Cerin\u021be"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Windows 10/11")," x64"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"~ 2 GB")," spatiu liber"),(0,t.yg)("li",{parentName:"ul"},"`Drepturi de instalare")),(0,t.yg)("h2",{id:"1-instaleaz\u0103-msys2"},"1. Instaleaz\u0103 MSYS2"),(0,t.yg)("h3",{id:"11-descarc\u0103-\u0219i-instaleaz\u0103"},"1.1. Descarc\u0103 \u0219i instaleaz\u0103"),(0,t.yg)("p",null,"Descarc\u0103 \u0219i instaleaz\u0103 ",(0,t.yg)("a",{parentName:"p",href:"https://www.msys2.org/"},"MSYS2")," (loca\u021bie implicit\u0103 recomandat\u0103: ",(0,t.yg)("inlineCode",{parentName:"p"},"C:\\msys64"),")."),(0,t.yg)("h3",{id:"12-deschide-terminalul-corect"},"1.2. Deschide terminalul corect"),(0,t.yg)("p",null,"Din Start, deschide ",(0,t.yg)("strong",{parentName:"p"},"MSYS2 MinGW 64-bit"),"\n\u2757 NU folosi ",(0,t.yg)("strong",{parentName:"p"},"MSYS")," sau ",(0,t.yg)("strong",{parentName:"p"},"UCRT64"),"."),(0,t.yg)("h3",{id:"13-actualizeaz\u0103-pachetele"},"1.3. Actualizeaz\u0103 pachetele"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"}," pacman  -Syu\n")),(0,t.yg)("p",null,"Daca \u021bi se cere, \xeenchide fereastra, apoi redeschide ",(0,t.yg)("strong",{parentName:"p"},"MSYS2 MinGW 64-bit")," \u0219i ruleaz\u0103 din nou:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"}," pacman  -Syu\n")),(0,t.yg)("h3",{id:"14-instaleaz\u0103-uneltele-necesare"},"1.4. Instaleaz\u0103 uneltele necesare"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"}," pacman -S --needed make mingw-w64-x86_64-iverilog mingw-w64-x86_64-gtkwave\n")),(0,t.yg)("h3",{id:"15-verific\u0103-instalarea"},"1.5. Verific\u0103 instalarea"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"}," which  make\n which  iverilog\n which  vvp\n which  gtkwave\n")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Rezultat a\u0219teptat:")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"/usr/bin/make")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"/mingw64/bin/{iverilog, vvp, gtkwave}"))),(0,t.yg)("h2",{id:"2-instaleaz\u0103-vs-code--extensii"},"2. Instaleaz\u0103 VS Code + extensii"),(0,t.yg)("h3",{id:"21-instaleaza-visual-studio-code"},"2.1. Instaleaza Visual Studio Code"),(0,t.yg)("p",null,"Descarca si instaleaza ",(0,t.yg)("a",{parentName:"p",href:"https://code.visualstudio.com/"},"Visual Studio Code"),"."),(0,t.yg)("h3",{id:"22-extensii-recomandate"},"2.2. Extensii recomandate"),(0,t.yg)("p",null,"\xcen VS Code \u2192 ",(0,t.yg)("strong",{parentName:"p"},"View \u2192 Extensions"),", caut\u0103 \u0219i instaleaz\u0103:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"mshr-h.veriloghdl")," (Verilog/SystemVerilog)"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"ms-vscode.makefile-tools")," ",(0,t.yg)("em",{parentName:"li"},"(op\u021bional, dar util)")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"streetsidesoftware.code-spell-checker")," ",(0,t.yg)("em",{parentName:"li"},"(op\u021bional)"))),(0,t.yg)("h4",{id:"instalare-prin-cli-daca-code-este-\xeen-path"},"Instalare prin CLI (daca ",(0,t.yg)("inlineCode",{parentName:"h4"},"code")," este \xeen PATH):"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"}," code  --install-extension  mshr-h.veriloghdl\n code  --install-extension  ms-vscode.makefile-tools\n code  --install-extension  streetsidesoftware.code-spell-checker\n")),(0,t.yg)("h2",{id:"3-cloneaz\u0103-repository-ul-starter"},"3. Cloneaz\u0103 repository-ul \u201estarter\u201d"),(0,t.yg)("p",null,"\xcenlocuie\u0219te ",(0,t.yg)("inlineCode",{parentName:"p"},"<REPO_URL>")," cu adresa repository-ului."),(0,t.yg)("h3",{id:"varianta-powershell--cmd"},"Varianta PowerShell / CMD:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-powershell"}," cd %USERPROFILE%\\Desktop\n git clone <REPO_URL>\n code verilog-starter\n")),(0,t.yg)("h3",{id:"varianta-msys2-op\u021bional"},"Varianta MSYS2 (op\u021bional):"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"}," cd  /c/Users/%USERNAME%/Desktop\n git  clone <REPO_URL>\n")),(0,t.yg)("blockquote",null,(0,t.yg)("p",{parentName:"blockquote"},"\ud83d\udca1 La prima deschidere, VS Code va propune \u201eInstall recommended extensions\u201d. Apas\u0103 ",(0,t.yg)("strong",{parentName:"p"},"Accept"),".")),(0,t.yg)("h2",{id:"4-ce-con\u021bine-repository-ul"},"4. Ce con\u021bine repository-ul"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},".vscode/tasks.json")," \u2013 Task \u201eone-click\u201d care ruleaz\u0103: ",(0,t.yg)("strong",{parentName:"li"},"compileaz\u0103 (iverilog) \u2192 ruleaz\u0103 (vvp) \u2192 deschide GTKWave")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},".vscode/settings.json")," \u2013 Configurare linter, calea c\u0103tre iverilog \u0219i set\u0103ri cSpell"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Makefile")," \u2013 alternativ\u0103 la task pentru compilare, rulare \u0219i deschidere GTKWave")),(0,t.yg)("h2",{id:"5-ruleaz\u0103-primul-exemplu"},"5. Ruleaz\u0103 primul exemplu"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"In VS Code: ",(0,t.yg)("strong",{parentName:"li"},"File \u2192 Open Folder...")," \u0219i deschide folderul repository-ului."),(0,t.yg)("li",{parentName:"ol"},"Deschide ",(0,t.yg)("inlineCode",{parentName:"li"},"examples/tb_counter.v"),"."),(0,t.yg)("li",{parentName:"ol"},"Apas\u0103 ",(0,t.yg)("strong",{parentName:"li"},"Ctrl + Shift + B")," \u2192 alege sau ruleaz\u0103 direct ",(0,t.yg)("strong",{parentName:"li"},"Verilog: Build + Run + GTKWave"),".")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Ce se \xeentampl\u0103:")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Se compileaz\u0103 (",(0,t.yg)("inlineCode",{parentName:"li"},"sim.vvp"),")"),(0,t.yg)("li",{parentName:"ul"},"Se ruleaz\u0103 simularea"),(0,t.yg)("li",{parentName:"ul"},"Se genereaz\u0103 ",(0,t.yg)("inlineCode",{parentName:"li"},"waves.vcd")),(0,t.yg)("li",{parentName:"ul"},"Se deschide GTKWave")),(0,t.yg)("blockquote",null,(0,t.yg)("p",{parentName:"blockquote"},"Daca apare \u201eSelect default build task\u201d, alege ",(0,t.yg)("strong",{parentName:"p"},"Verilog: Build + Run + GTKWave"),".")),(0,t.yg)("h2",{id:"6-reguli-standard-pentru-testbench"},"6. Reguli standard pentru testbench"),(0,t.yg)("p",null,"Pentru a vizualiza semnalele \xeen GTKWave, adaug\u0103 \xeen testbench urmatorul bloc:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-verilog"},' initial begin\n     $dumpfile("waves.vcd");\n     $dumpvars(0, tb_dut); // inlocuieste "tb_dut" cu numele modulului TB\n end\n')),(0,t.yg)("p",null,"De asemenea, adauga o conditie de terminare a simularii:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-verilog"}," #100 $finish; // opreste simularea dupa 100 unitati de timp\n")),(0,t.yg)("h2",{id:"7-rulare-manual\u0103-din-msys2-op\u021bional"},"7. Rulare manual\u0103 din MSYS2 (op\u021bional)"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"}," iverilog -g2012  -Wall  -o  sim.vvp $(find  .  -name  '*.v'  -o  -name  '*.sv')\n vvp sim.vvp\n gtkwave waves.vcd &\n")),(0,t.yg)("p",null,"Dac\u0103 folose\u0219ti Makefile:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"}," make wave\n")),(0,t.yg)("h2",{id:"8-probleme-frecvente"},"8. Probleme frecvente"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Problema"),(0,t.yg)("th",{parentName:"tr",align:null},"Solu\u021bia"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("strong",{parentName:"td"},"Se deschide alt terminal MSYS2")),(0,t.yg)("td",{parentName:"tr",align:null},"Deschide ",(0,t.yg)("strong",{parentName:"td"},"MSYS2 MinGW 64-bit"),", apoi ruleaz\u0103: ",(0,t.yg)("br",null)," ",(0,t.yg)("inlineCode",{parentName:"td"},"which iverilog")," ",(0,t.yg)("br",null)," Trebuie s\u0103 afi\u0219eze: ",(0,t.yg)("br",null)," ",(0,t.yg)("inlineCode",{parentName:"td"},"/mingw64/bin/iverilog"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("strong",{parentName:"td"},"make: command not found")),(0,t.yg)("td",{parentName:"tr",align:null},"Instaleaz\u0103 make: ",(0,t.yg)("br",null)," ",(0,t.yg)("inlineCode",{parentName:"td"},"pacman -S make"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("strong",{parentName:"td"},"GTKWave nu se deschide")),(0,t.yg)("td",{parentName:"tr",align:null},"Verific\u0103 dac\u0103 fi\u0219ierul ",(0,t.yg)("inlineCode",{parentName:"td"},"waves.vcd")," exist\u0103. ",(0,t.yg)("br",null)," Asigur\u0103-te c\u0103 ai \xeen testbench instruc\u021biunile ",(0,t.yg)("inlineCode",{parentName:"td"},"$dumpfile")," \u0219i ",(0,t.yg)("inlineCode",{parentName:"td"},"$dumpvars"),".")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("strong",{parentName:"td"},"No top level modules, and no -s option")),(0,t.yg)("td",{parentName:"tr",align:null},"Deschide testbench-ul \u0219i ruleaz\u0103 din nou. ",(0,t.yg)("br",null)," Makefile-ul detecteaz\u0103 automat top-ul curent.")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("strong",{parentName:"td"},"VS Code porne\u0219te msbuild")),(0,t.yg)("td",{parentName:"tr",align:null},"\xcen VS Code mergi la: ",(0,t.yg)("br",null)," ",(0,t.yg)("strong",{parentName:"td"},"Terminal \u2192 Configure Default Build Task")," ",(0,t.yg)("br",null)," Alege ",(0,t.yg)("strong",{parentName:"td"},"Verilog: Build + Run + GTKWave"),".")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("strong",{parentName:"td"},"Linter nu g\u0103se\u0219te iverilog")),(0,t.yg)("td",{parentName:"tr",align:null},"\xcen fi\u0219ierul ",(0,t.yg)("inlineCode",{parentName:"td"},".vscode/settings.json"),", confirm\u0103 c\u0103 ai calea corect\u0103: ",(0,t.yg)("br",null)," ",(0,t.yg)("inlineCode",{parentName:"td"},'"verilog.iverilog.path": "C:\\\\msys64\\\\mingw64\\\\bin\\\\iverilog.exe"'))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("strong",{parentName:"td"},"MSYS2 nu este \xeen ",(0,t.yg)("inlineCode",{parentName:"strong"},"C:\\msys64"))),(0,t.yg)("td",{parentName:"tr",align:null},"\xcen fi\u0219ierul ",(0,t.yg)("inlineCode",{parentName:"td"},".vscode/tasks.json"),", editeaz\u0103: ",(0,t.yg)("br",null)," ",(0,t.yg)("inlineCode",{parentName:"td"},'"command": "C:\\\\msys64\\\\usr\\\\bin\\\\bash.exe"')," ",(0,t.yg)("br",null)," \u0219i pune calea real\u0103.")))),(0,t.yg)("h2",{id:"9-acum-e\u0219ti-preg\u0103tit-\xee\u021bi-simulezi-propriile-proiecte-"},"9. Acum e\u0219ti preg\u0103tit \xee\u021bi simulezi propriile proiecte \ud83d\ude80"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Pune fisierele ",(0,t.yg)("inlineCode",{parentName:"li"},".v")," / ",(0,t.yg)("inlineCode",{parentName:"li"},".sv")," in folderul repo-ului (",(0,t.yg)("inlineCode",{parentName:"li"},"examples/")," sau alt subfolder)."),(0,t.yg)("li",{parentName:"ol"},"Deschide testbench-ul."),(0,t.yg)("li",{parentName:"ol"},"Apasa ",(0,t.yg)("strong",{parentName:"li"},"Ctrl + Shift + B"),"."),(0,t.yg)("li",{parentName:"ol"},"GTKWave iti va afisa semnalele din ",(0,t.yg)("inlineCode",{parentName:"li"},"waves.vcd"),".")),(0,t.yg)("blockquote",null,(0,t.yg)("p",{parentName:"blockquote"},"\ud83d\udca1 Po\u021bi salva o vizualizare GTKWave ca ",(0,t.yg)("inlineCode",{parentName:"p"},"view.gtkw")," pentru a fi \xeencarcat\u0103 automat la urmatoarea rulare.")),(0,t.yg)("h2",{id:"concluzie"},"Concluzie"),(0,t.yg)("p",null,"Ai ob\u021binut un mediu complet configurat pentru:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Simulare ",(0,t.yg)("strong",{parentName:"li"},"Verilog")),(0,t.yg)("li",{parentName:"ul"},"Vizualizare semnale cu ",(0,t.yg)("strong",{parentName:"li"},"GTKWave")),(0,t.yg)("li",{parentName:"ul"},"Flux rapid \u0219i portabil")))}c.isMDXComponent=!0},5680:(e,a,l)=>{l.d(a,{xA:()=>s,yg:()=>m});var n=l(6540);function t(e,a,l){return a in e?Object.defineProperty(e,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[a]=l,e}function r(e,a){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter(function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable})),l.push.apply(l,n)}return l}function i(e){for(var a=1;a<arguments.length;a++){var l=null!=arguments[a]?arguments[a]:{};a%2?r(Object(l),!0).forEach(function(a){t(e,a,l[a])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach(function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(l,a))})}return e}function o(e,a){if(null==e)return{};var l,n,t=function(e,a){if(null==e)return{};var l,n,t={},r=Object.keys(e);for(n=0;n<r.length;n++)l=r[n],a.indexOf(l)>=0||(t[l]=e[l]);return t}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)l=r[n],a.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(t[l]=e[l])}return t}var u=n.createContext({}),p=function(e){var a=n.useContext(u),l=a;return e&&(l="function"==typeof e?e(a):i(i({},a),e)),l},s=function(e){var a=p(e.components);return n.createElement(u.Provider,{value:a},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},d=n.forwardRef(function(e,a){var l=e.components,t=e.mdxType,r=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),g=p(l),d=t,m=g["".concat(u,".").concat(d)]||g[d]||c[d]||r;return l?n.createElement(m,i(i({ref:a},s),{},{components:l})):n.createElement(m,i({ref:a},s))});function m(e,a){var l=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var r=l.length,i=new Array(r);i[0]=d;var o={};for(var u in a)hasOwnProperty.call(a,u)&&(o[u]=a[u]);o.originalType=e,o[g]="string"==typeof e?e:t,i[1]=o;for(var p=2;p<r;p++)i[p]=l[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,l)}d.displayName="MDXCreateElement"}}]);