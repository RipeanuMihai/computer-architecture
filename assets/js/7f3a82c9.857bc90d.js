"use strict";(self.webpackChunkcomputer_architecture=self.webpackChunkcomputer_architecture||[]).push([[3254],{5680:(e,r,a)=>{a.d(r,{xA:()=>p,yg:()=>g});var t=a(6540);function i(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function n(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),a.push.apply(a,t)}return a}function o(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?n(Object(a),!0).forEach(function(r){i(e,r,a[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))})}return e}function l(e,r){if(null==e)return{};var a,t,i=function(e,r){if(null==e)return{};var a,t,i={},n=Object.keys(e);for(t=0;t<n.length;t++)a=n[t],r.indexOf(a)>=0||(i[a]=e[a]);return i}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(t=0;t<n.length;t++)a=n[t],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var u=t.createContext({}),c=function(e){var r=t.useContext(u),a=r;return e&&(a="function"==typeof e?e(r):o(o({},r),e)),a},p=function(e){var r=c(e.components);return t.createElement(u.Provider,{value:r},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef(function(e,r){var a=e.components,i=e.mdxType,n=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(a),d=i,g=m["".concat(u,".").concat(d)]||m[d]||s[d]||n;return a?t.createElement(g,o(o({ref:r},p),{},{components:a})):t.createElement(g,o({ref:r},p))});function g(e,r){var a=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var n=a.length,o=new Array(n);o[0]=d;var l={};for(var u in r)hasOwnProperty.call(r,u)&&(l[u]=r[u]);l.originalType=e,l[m]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<n;c++)o[c]=a[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},6677:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>u,contentTitle:()=>o,default:()=>s,frontMatter:()=>n,metadata:()=>l,toc:()=>c});var t=a(8168),i=(a(6540),a(5680));const n={},o="Practic\u0103:",l={unversionedId:"Laboratoare/1 Verilog Combina\u021bional/Descriere structurala/Practic\u0103/README",id:"Laboratoare/1 Verilog Combina\u021bional/Descriere structurala/Practic\u0103/README",title:"Practic\u0103:",description:"1. Sumator elementar complet, utiliz\xe2nd sumatoare elementare par\u021biale.",source:"@site/docs/Laboratoare/1 Verilog Combina\u021bional/Descriere structurala/Practic\u0103/README.md",sourceDirName:"Laboratoare/1 Verilog Combina\u021bional/Descriere structurala/Practic\u0103",slug:"/Laboratoare/1 Verilog Combina\u021bional/Descriere structurala/Practic\u0103/",permalink:"/computer-architecture/Laboratoare/1 Verilog Combina\u021bional/Descriere structurala/Practic\u0103/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Structura limbajului Verilog",permalink:"/computer-architecture/Laboratoare/1 Verilog Combina\u021bional/Descriere structurala/Teorie/"},next:{title:"2 Verilog Combina\u021bional",permalink:"/computer-architecture/Laboratoare/2 Verilog Combina\u021bional/"}},u={},c=[{value:"1. <strong>Sumator elementar complet</strong>, utiliz\xe2nd sumatoare elementare par\u021biale.",id:"1-sumator-elementar-complet-utiliz\xe2nd-sumatoare-elementare-par\u021biale",level:2},{value:"2. <strong>Sumator pe 4 bi\u021bi</strong>, cu dou\u0103 intr\u0103ri \u0219i dou\u0103 ie\u0219iri.",id:"2-sumator-pe-4-bi\u021bi-cu-dou\u0103-intr\u0103ri-\u0219i-dou\u0103-ie\u0219iri",level:2},{value:"3. <strong>Sumator pe 6 bi\u021bi</strong>, cu dou\u0103 intr\u0103ri \u0219i o ie\u0219ire.",id:"3-sumator-pe-6-bi\u021bi-cu-dou\u0103-intr\u0103ri-\u0219i-o-ie\u0219ire",level:2},{value:"4. <strong>Comparator</strong> pe un bit.",id:"4-comparator-pe-un-bit",level:2}],p={toc:c},m="wrapper";function s({components:e,...r}){return(0,i.yg)(m,(0,t.A)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"practic\u0103"},"Practic\u0103:"),(0,i.yg)("h2",{id:"1-sumator-elementar-complet-utiliz\xe2nd-sumatoare-elementare-par\u021biale"},"1. ",(0,i.yg)("strong",{parentName:"h2"},"Sumator elementar complet"),", utiliz\xe2nd sumatoare elementare par\u021biale."),(0,i.yg)("p",null,"  Solu\u021bia se afl\u0103 \xeen repo-ul materiei ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/cs-pub-ro/computer-architecture/tree/main/chapters/verilog/basic/drills/tasks/fulladder"},"GitHub"),". Implementarea unui sumator elementar par\u021bial se poate g\u0103si \xeen fi\u0219ierul ",(0,i.yg)("inlineCode",{parentName:"p"},"halfadder.v"),", iar sumatorul elementar complet \xeen ",(0,i.yg)("inlineCode",{parentName:"p"},"fulladder.v"),". Observa\u021bi modul \xeen care sunt declarate sumatoarele elementare par\u021biale."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-verilog"},"halfadder l_m_halfadder_0( .o_w_s(l_w_s0), .o_w_cout(l_w_c0), .i_w_a(i_w_a), .i_w_b(i_w_b) );\nhalfadder l_m_halfadder_1( .o_w_s(o_w_s), .o_w_cout(l_w_c1), .i_w_a(i_w_cin), .i_w_b(l_w_s0) );\n")),(0,i.yg)("p",null,"  Pentru a crea proiectul putem folosi comanda ",(0,i.yg)("inlineCode",{parentName:"p"},"make build"),". Pentru simulare ",(0,i.yg)("inlineCode",{parentName:"p"},"make simluation")," \u0219i pentru a deschide \xeentreg proiectul \xeen Vivado \u0219i a avea posibilitatea de a \xeenc\u0103rca pe FPGA ",(0,i.yg)("inlineCode",{parentName:"p"},"make vivado"),"."),(0,i.yg)("h2",{id:"2-sumator-pe-4-bi\u021bi-cu-dou\u0103-intr\u0103ri-\u0219i-dou\u0103-ie\u0219iri"},"2. ",(0,i.yg)("strong",{parentName:"h2"},"Sumator pe 4 bi\u021bi"),", cu dou\u0103 intr\u0103ri \u0219i dou\u0103 ie\u0219iri."),(0,i.yg)("p",null,"  Solu\u021bia se afl\u0103 \xeen repo-ul materiei ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/cs-pub-ro/computer-architecture/tree/main/chapters/verilog/basic/drills/tasks/adder_4bits"},"GitHub"),". Rula\u021bi simulare (",(0,i.yg)("inlineCode",{parentName:"p"},"make simluation"),") \u0219i verifica\u021bi corectitudinea sumatorului vizualiz\xe2nd semnalele \xeen baza 10. "),(0,i.yg)("h2",{id:"3-sumator-pe-6-bi\u021bi-cu-dou\u0103-intr\u0103ri-\u0219i-o-ie\u0219ire"},"3. ",(0,i.yg)("strong",{parentName:"h2"},"Sumator pe 6 bi\u021bi"),", cu dou\u0103 intr\u0103ri \u0219i o ie\u0219ire."),(0,i.yg)("p",null,"  Solu\u021bia se afl\u0103 \xeen repo-ul materiei ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/cs-pub-ro/computer-architecture/tree/main/chapters/verilog/basic/drills/tasks/adder_6bits"},"GitHub"),". \xcenc\u0103rca\u021bi programul pe FPGA (",(0,i.yg)("inlineCode",{parentName:"p"},"make vivado"),"), urm\u0103rind ghidul."),(0,i.yg)("h2",{id:"4-comparator-pe-un-bit"},"4. ",(0,i.yg)("strong",{parentName:"h2"},"Comparator")," pe un bit."),(0,i.yg)("p",null,"  Acesta are dou\u0103 intr\u0103ri \u0219i trei ie\u0219iri (pentru mai mic, egal \u0219i mai mare). Solu\u021bia se afl\u0103 \xeen repo-ul materiei ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/cs-pub-ro/computer-architecture/tree/main/chapters/verilog/basic/drills/tasks/comparator"},"GitHub"),". Simula\u021bi \u0219i \xeenc\u0103rca\u021bi pe FPGA."))}s.isMDXComponent=!0}}]);